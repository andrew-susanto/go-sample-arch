// Code generated by MockGen. DO NOT EDIT.
// Source: infrastructure.go
//
// Generated by this command:
//
//	mockgen -source=infrastructure.go -destination=infrastructure_mock.go -package=infrastructure
//
// Package infrastructure is a generated GoMock package.
package infrastructure

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockParamStore is a mock of ParamStore interface.
type MockParamStore struct {
	ctrl     *gomock.Controller
	recorder *MockParamStoreMockRecorder
}

// MockParamStoreMockRecorder is the mock recorder for MockParamStore.
type MockParamStoreMockRecorder struct {
	mock *MockParamStore
}

// NewMockParamStore creates a new mock instance.
func NewMockParamStore(ctrl *gomock.Controller) *MockParamStore {
	mock := &MockParamStore{ctrl: ctrl}
	mock.recorder = &MockParamStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockParamStore) EXPECT() *MockParamStoreMockRecorder {
	return m.recorder
}

// GetValue mocks base method.
func (m *MockParamStore) GetValue(key string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValue", key)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetValue indicates an expected call of GetValue.
func (mr *MockParamStoreMockRecorder) GetValue(key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValue", reflect.TypeOf((*MockParamStore)(nil).GetValue), key)
}

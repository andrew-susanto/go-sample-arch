// Code generated by MockGen. DO NOT EDIT.
// Source: ./service.go
//
// Generated by this command:
//
//	mockgen -source=./service.go -destination=./service_mock.go -package=user
//
// Package user is a generated GoMock package.
package user

import (
	context "context"
	reflect "reflect"

	entity "github.com/andrew-susanto/go-sample-arch/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockResource is a mock of Resource interface.
type MockResource struct {
	ctrl     *gomock.Controller
	recorder *MockResourceMockRecorder
}

// MockResourceMockRecorder is the mock recorder for MockResource.
type MockResourceMockRecorder struct {
	mock *MockResource
}

// NewMockResource creates a new mock instance.
func NewMockResource(ctrl *gomock.Controller) *MockResource {
	mock := &MockResource{ctrl: ctrl}
	mock.recorder = &MockResourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResource) EXPECT() *MockResourceMockRecorder {
	return m.recorder
}

// GetUserByIDFromCache mocks base method.
func (m *MockResource) GetUserByIDFromCache(ctx context.Context, ID int64) (entity.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserByIDFromCache", ctx, ID)
	ret0, _ := ret[0].(entity.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserByIDFromCache indicates an expected call of GetUserByIDFromCache.
func (mr *MockResourceMockRecorder) GetUserByIDFromCache(ctx, ID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserByIDFromCache", reflect.TypeOf((*MockResource)(nil).GetUserByIDFromCache), ctx, ID)
}

// GetUserByIDFromDB mocks base method.
func (m *MockResource) GetUserByIDFromDB(ctx context.Context, ID int64) (entity.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserByIDFromDB", ctx, ID)
	ret0, _ := ret[0].(entity.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserByIDFromDB indicates an expected call of GetUserByIDFromDB.
func (mr *MockResourceMockRecorder) GetUserByIDFromDB(ctx, ID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserByIDFromDB", reflect.TypeOf((*MockResource)(nil).GetUserByIDFromDB), ctx, ID)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: ./resource.go

// Package user is a generated GoMock package.
package user

import (
	gomock "github.com/golang/mock/gomock"
	entity "github.com/joez-tkpd/go-sample-arch/entity"
	reflect "reflect"
)

// MockResource is a mock of Resource interface
type MockResource struct {
	ctrl     *gomock.Controller
	recorder *MockResourceMockRecorder
}

// MockResourceMockRecorder is the mock recorder for MockResource
type MockResourceMockRecorder struct {
	mock *MockResource
}

// NewMockResource creates a new mock instance
func NewMockResource(ctrl *gomock.Controller) *MockResource {
	mock := &MockResource{ctrl: ctrl}
	mock.recorder = &MockResourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockResource) EXPECT() *MockResourceMockRecorder {
	return m.recorder
}

// GetUserByIDPgSqlx mocks base method
func (m *MockResource) GetUserByIDPgSqlx(id int64) entity.User {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserByIDPgSqlx", id)
	ret0, _ := ret[0].(entity.User)
	return ret0
}

// GetUserByIDPgSqlx indicates an expected call of GetUserByIDPgSqlx
func (mr *MockResourceMockRecorder) GetUserByIDPgSqlx(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserByIDPgSqlx", reflect.TypeOf((*MockResource)(nil).GetUserByIDPgSqlx), id)
}

// GetUserByIDRedis mocks base method
func (m *MockResource) GetUserByIDRedis(id int64) entity.User {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserByIDRedis", id)
	ret0, _ := ret[0].(entity.User)
	return ret0
}

// GetUserByIDRedis indicates an expected call of GetUserByIDRedis
func (mr *MockResourceMockRecorder) GetUserByIDRedis(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserByIDRedis", reflect.TypeOf((*MockResource)(nil).GetUserByIDRedis), id)
}

// SetUserRedis mocks base method
func (m *MockResource) SetUserRedis(user entity.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetUserRedis", user)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetUserRedis indicates an expected call of SetUserRedis
func (mr *MockResourceMockRecorder) SetUserRedis(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetUserRedis", reflect.TypeOf((*MockResource)(nil).SetUserRedis), user)
}
